<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyc.songshu.manager.dao.CommentDAO">
  <resultMap id="BaseResultMap" type="com.yyc.songshu.manager.pojo.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="vid" jdbcType="INTEGER" property="vid" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="updated_at" jdbcType="INTEGER" property="updatedAt" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <association property="users" javaType="com.yyc.songshu.manager.pojo.Users">
      <result column="nickname" jdbcType="VARCHAR" property="nickname" />
      <result column="avatar" jdbcType="VARCHAR" property="avatar" />
      <result column="id" jdbcType="INTEGER" property="id" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, type, vid, user_id, content, like_num, pid, comment_id, status, updated_at, created_at
  </sql>
  <select id="selectCommentByTypeAndVid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  SELECT c.id, c.type, c.vid, c.user_id, c.content, c.like_num, c.pid, c.comment_id, c.status, c.updated_at, c.created_at,
u.username,u.nickname,u.avatar,u.id
FROM comment c
LEFT JOIN users u ON u.id = c.user_id
where c.type=#{type,jdbcType=INTEGER} and vid = #{vid,jdbcType=INTEGER} and pid = 0
ORDER BY `created_at` DESC
limit #{page,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="selectAllComment" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     SELECT c.id, c.type, c.vid, c.user_id, c.content, c.like_num, c.pid, c.comment_id, c.status, c.updated_at, c.created_at,
u.username,u.nickname,u.avatar,u.id
FROM comment c
LEFT JOIN users u ON u.id = c.user_id
ORDER BY `created_at` DESC
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="likeOnCommentById" parameterType="java.lang.Integer">
    update `comment` set like_num=like_num+1 where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="likeOffCommentById" parameterType="java.lang.Integer">
    update `comment` set like_num=like_num-1 where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.yyc.songshu.manager.pojo.Comment">
    insert into comment (id, type, vid, user_id, 
      content, like_num, pid, 
      comment_id, status, updated_at, 
      created_at)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=BIT}, #{vid,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{likeNum,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{commentId,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{updatedAt,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=INTEGER})
  </insert>
  <select id="selectChildComment" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     SELECT c.id, c.type, c.vid, c.user_id, c.content, c.like_num, c.pid, c.comment_id, c.status, c.updated_at, c.created_at,
u.username,u.nickname,u.avatar,u.id
FROM comment c
LEFT JOIN users u ON u.id = c.user_id
where c.pid=#{pid,jdbcType=INTEGER}
ORDER BY `created_at` DESC
limit #{page,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="selectCommentCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     SELECT COUNT(id) FROM comment WHERE vid = #{vid,jdbcType=INTEGER}
  </select>

  <select id="selectChildCommentCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     SELECT COUNT(id) FROM comment WHERE pid = #{pid,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.yyc.songshu.manager.pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="vid != null">
        vid,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="vid != null">
        #{vid,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyc.songshu.manager.pojo.Comment">
    update comment
    <set>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="vid != null">
        vid = #{vid,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyc.songshu.manager.pojo.Comment">
    update comment
    set type = #{type,jdbcType=BIT},
      vid = #{vid,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      updated_at = #{updatedAt,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>